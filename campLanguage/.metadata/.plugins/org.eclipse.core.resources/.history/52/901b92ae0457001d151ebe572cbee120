package kodlama.io.language.business.concretes;

import java.util.List;

import org.springframework.stereotype.Service;

import kodlama.io.language.business.abstracts.LanguageService;
import kodlama.io.language.dataAccess.abstracts.LanguageRepository;
import kodlama.io.language.entities.concretes.Language;

@Service
public class LanguageManager implements LanguageService {

	private LanguageRepository languageRepository;

	public LanguageManager(LanguageRepository languageRepository) {

		this.languageRepository = languageRepository;
	}

//	@Override
//	public List<Language> getAll() {
//		// iş kuralları
//		return languageRepository.getAll();
//	}
//
//	@Override
//	public void add(Language language) {
//
//		for (Language language2 : languageRepository.getAll()) {
//			if (language.getName().equalsIgnoreCase(language2.getName())) {
//				throw new Exception("");
//				return true;
//			}
//			return false;
//		}
//		this.languageRepository.add(language);
//	}
//
//	@Override
//	public void update(Language language, int id) {
//
//		for (Language language2 : languageRepository.getAll()) {
//			if (language2.getI
//				() == language.getId()) {
//				languageRepository.update(language, language.getId());
//			}
//		}
//	}
//
//	@Override
//	public void delete(int id) throws Exception {
//		if(!isIdExist(id)) 
//			throw new Exception("İd bulunamadı.");
//        languageRepository.delete(id);
//
//	}
//
//	@Override
//	public Language getById(int id)throws Exception {
//		if(!isIdExist(id))throw new Exception ("id bulunamadı");
//        return languageRepository.getById(id);
//	}
//	
	public boolean isNameExist(Language language){
        for(Language language1: getAll()){
            if(language.getName().equalsIgnoreCase(language1.getName())){
                return true;
            }
        }return false;

    }
    public boolean isIdExist(int id){
        for (Language language1: getAll()){
            if (language1.getId()==id){
                return true;
            }
        }return false;

    }

	@Override
	public List<Language> getAll() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void add(Language language) throws Exception {
		if(isIdExist(language.getId())) throw new Exception("İd tekrar edemez.");
        if(isNameExist(language))throw new Exception("İsim tekrar edemez");
        return languageRepository.add(language);
		
	}

	@Override
	public void update(Language language, int id) throws Exception {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void delete(int id) throws Exception {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Language getById(int id) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

}
